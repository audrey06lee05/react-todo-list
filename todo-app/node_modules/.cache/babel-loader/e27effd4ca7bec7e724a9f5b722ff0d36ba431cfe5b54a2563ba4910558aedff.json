{"ast":null,"code":"var _jsxFileName = \"/Users/audrey/Downloads/todo list /todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { MdDelete } from \"react-icons/md\"; //importing delete button icon\nimport { FaCheckCircle } from \"react-icons/fa\"; // import check button icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n  const [allTodos, setTodos] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const handleAddTodo = () => {\n    let newTodoItem = {\n      title: newTitle,\n      description: newDescription\n    };\n    let updatedTodoArr = [...allTodos];\n    updatedTodoArr.push(newTodoItem);\n    setTodos(updatedTodoArr);\n    localStorage.setItem(\"todolist\", updatedTodoArr); //save it to local storage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newTitle,\n            onChange: e => setNewTitle(e.target.value),\n            placeholder: \"What is the task title?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newDescription,\n            onChange: e => setNewDescription(e.target.value),\n            placeholder: \"What is the task description?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-input-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleAddTodo,\n            className: \"primaryBtn\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `secondaryBtn ${isCompleteScreen === false && \"active\"}`,\n          onClick: () => setIsCompleteScreen(false),\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `secondaryBtn ${isCompleteScreen === true && \"active\"}`,\n          onClick: () => setIsCompleteScreen(true),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-list\",\n        children: allTodos.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MdDelete, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                className: \"check-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"30WCDx6YZzUU0wJJdJYDeDn8K7w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MdDelete","FaCheckCircle","jsxDEV","_jsxDEV","App","_s","isCompleteScreen","setIsCompleteScreen","allTodos","setTodos","newTitle","setNewTitle","newDescription","setNewDescription","handleAddTodo","newTodoItem","title","description","updatedTodoArr","push","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","item","index","_c","$RefreshReg$"],"sources":["/Users/audrey/Downloads/todo list /todo-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { MdDelete } from \"react-icons/md\"; //importing delete button icon\nimport { FaCheckCircle } from \"react-icons/fa\"; // import check button icon\n\nfunction App() {\n  const [isCompleteScreen, setIsCompleteScreen] = useState(false);\n  const [allTodos, setTodos] = useState([]);\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n\n  const handleAddTodo = () => {\n    let newTodoItem = {\n      title: newTitle,\n      description: newDescription,\n    };\n\n    let updatedTodoArr = [...allTodos];\n    updatedTodoArr.push(newTodoItem);\n    setTodos(updatedTodoArr);\n    localStorage.setItem(\"todolist\", updatedTodoArr); //save it to local storage\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>My Todo List</h1>\n      <div className=\"todo-wrapper\">\n        <div className=\"todo-input\">\n          <div className=\"todo-input-item\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              value={newTitle}\n              onChange={(e) => setNewTitle(e.target.value)}\n              placeholder=\"What is the task title?\"\n            />\n          </div>\n          <div className=\"todo-input-item\">\n            <label>Description</label>\n            <input\n              type=\"text\"\n              value={newDescription}\n              onChange={(e) => setNewDescription(e.target.value)}\n              placeholder=\"What is the task description?\"\n            />\n          </div>\n          <div className=\"todo-input-item\">\n            <button\n              type=\"button\"\n              onClick={handleAddTodo}\n              className=\"primaryBtn\"\n            >\n              Add\n            </button>\n          </div>\n        </div>\n        <div className=\"btn-area\">\n          <button\n            className={`secondaryBtn ${isCompleteScreen === false && \"active\"}`}\n            onClick={() => setIsCompleteScreen(false)}\n          >\n            Todo\n          </button>\n          <button\n            className={`secondaryBtn ${isCompleteScreen === true && \"active\"}`}\n            onClick={() => setIsCompleteScreen(true)}\n          >\n            Completed\n          </button>\n        </div>\n        <div className=\"todo-list\">\n          {allTodos.map((item, index) => {\n            return (\n              <div className=\"todo-list-item\" key={index}>\n                <div>\n                  <h3>{item.title}</h3>\n                  <p>{item.description}</p>\n                </div>\n                <div>\n                  <MdDelete className=\"icon\" />\n                  <FaCheckCircle className=\"check-icon\" />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}